import passport from 'passport'
import {Strategy as TwitterStrategy} from 'passport-twitter'

function twitterAuthenticate (User, accessToken, refreshToken, profile, done) {
  User.findOne({'twitter.id': profile.id}).exec()
    .then(user => {
      if (user) {
        return done(null, user)
      }
      user = new User({
        name: profile.displayName,
        email: profile.emails && profile.emails[0].value,
        role: 'user',
        provider: 'twitter',
        twitter: profile._json,
      })
      user.save()
        .then(savedUser => done(null, savedUser))
        .catch(err => done(err))
    })
    .catch(err => done(err))
}

export function setup (User, config) {
  passport.use(new TwitterStrategy({
    consumerKey: config.twitter.clientID,
    consumerSecret: config.twitter.clientSecret,
    callbackURL: config.twitter.callbackURL,
  },
  function (accessToken, refreshToken, profile, done) {
    return twitterAuthenticate(User, accessToken, refreshToken, profile, done)
  }))
}
